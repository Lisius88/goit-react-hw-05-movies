{"version":3,"file":"static/js/703.c2ab0d28.chunk.js","mappings":"8MAEaA,EAASC,EAAAA,EAAAA,OAAH,8LAUNC,EAAMD,EAAAA,EAAAA,IAAH,0C,SCRVE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6IAWHI,EAAa,WACxB,OACE,SAACL,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAYG,GAAG,IAAf,mBACA,SAACH,EAAD,CAAYG,GAAG,UAAf,wBAIP,C,yKCtBYC,EAAeN,EAAAA,EAAAA,OAAH,mNAWZO,EAAgBP,EAAAA,EAAAA,IAAH,0F,6BCNtBQ,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,OAAQF,EAAAA,KAAaG,aAGjBC,GAAQb,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,wLAWLe,GAAUf,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAH,8NAYAiB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAI1B,OACE,SAACX,EAAD,WACE,SAAC,KAAD,CACEY,cAAe,CAAER,OAAQ,IACzBO,SAPS,SAACE,EAAQC,GACtBH,EAASE,EAAOT,OACjB,EAMKW,iBAAkBd,EAHpB,UAKE,UAACO,EAAD,CAASQ,aAAa,MAAtB,WACE,SAACV,EAAD,CACEW,KAAK,SACLC,KAAK,OACLF,aAAa,MACbG,WAAS,EACTC,YAAY,mBAEd,SAACrB,EAAD,CAAcmB,KAAK,SAAnB,UACE,SAAC,MAAD,YAMX,ECrDKG,GAAiBC,EAAAA,EAAAA,OAAK,kBAC1B,6BAD0B,IAmE5B,EA7De,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA8BT,EAAAA,EAAAA,WAAS,GAAvC,eAAOU,EAAP,KAAgBC,EAAhB,KA0CA,OA3BAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,2GAAD,OACwGL,EADxG,+BAGFM,MAAK,SAAAC,GACJ,GAAIA,EAAKC,GACP,OAAOD,EAAKE,OAEdC,QAAQC,OAAO,IAAIC,MAAM,yCAC1B,IACAN,MAAK,SAAAO,GACU,OAAVb,IAGAa,EAAKC,QAAQC,OAAS,GACxBrB,EAAUmB,EAAKC,SAEU,IAAvBD,EAAKG,eACPC,EAAAA,GAAAA,MAAY,sBAEf,IACAC,OAAM,SAAAvB,GACLC,EAASD,EACV,IACAwB,QAAQhB,GAAW,GACvB,GAAE,CAACH,KAGF,gCACGE,IAAW,SAACkB,EAAA,EAAD,IACXzB,GAASsB,EAAAA,GAAAA,MAAY,0CACtB,SAACnD,EAAA,EAAD,KACA,SAACa,EAAD,CAAWC,SA7CO,SAAAyC,GAChBrB,IAAUqB,GACZ3B,EAAU,IAGRM,IAAUqB,IAIdtB,EAAgB,CAAEC,MAAOqB,IACzBlB,GAAW,GACZ,KAmCG,SAAC,EAAAmB,SAAD,CAAUC,UAAU,SAACH,EAAA,EAAD,IAApB,UACE,SAAC9B,EAAD,CAAgBG,OAAQA,OAE1B,SAAC,KAAD,CAAS+B,SAAS,YAAYC,cAAc,MAGjD,C","sources":["components/Navigation/Navagation.styled.jsx","components/Navigation/Navigation.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.3);\n  background-color: white;\n  margin-bottom: 20px;\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Header, Nav } from './Navagation.styled';\nimport styled from '@emotion/styled';\n\nconst LinkDesign = styled(NavLink)`\n  display: block;\n  padding: 12px;\n  font-size: 18px;\n  color: #000000;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const Navigation = () => {\n  return (\n    <Header>\n      <Nav>\n        <LinkDesign to=\"/\">Home</LinkDesign>\n        <LinkDesign to=\"/movies\">Movies</LinkDesign>\n      </Nav>\n    </Header>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const FormContainer = styled.div`\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Formik, Form, Field } from 'formik';\nimport styled from '@emotion/styled';\nimport { SearchButton, FormContainer } from './SearchBar.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\n\nlet schema = yup.object().shape({\n  search: yup.string().required(),\n});\n\nconst Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nconst OurForm = styled(Form)`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid teal;\n`;\n\nexport const SearchBar = ({ onSubmit }) => {\n  const submit = (values, actions) => {\n    onSubmit(values.search);\n  };\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{ search: '' }}\n        onSubmit={submit}\n        validationSchema={schema}\n      >\n        <OurForm autoComplete=\"off\">\n          <Input\n            name=\"search\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <SearchButton type=\"submit\">\n            <FaSearch />\n          </SearchButton>\n        </OurForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Navigation } from 'components/Navigation/Navigation';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\n\nconst TrendingMovies = lazy(() =>\n  import('../../components/TrendingMovies/TrendingMovies')\n);\n\n// `https://api.themoviedb.org/3/search/movie?api_key=1db4141403b8f52722dd71f31d913046&language=en-US&query=${word}&page=1&include_adult=true`\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [loading, setLoading] = useState(false);\n\n  const onSubmitClick = value => {\n    if (query !== value) {\n      setMovies([]);\n    }\n\n    if (query === value) {\n      return;\n    }\n\n    setSearchParams({ query: value });\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=1db4141403b8f52722dd71f31d913046&language=en-US&query=${query}&page=1&include_adult=true`\n    )\n      .then(resp => {\n        if (resp.ok) {\n          return resp.json();\n        }\n        Promise.reject(new Error('Sorry, something is not OK. Try again'));\n      })\n      .then(data => {\n        if (query === null) {\n          return;\n        }\n        if (data.results.length > 0) {\n          setMovies(data.results);\n        }\n        if (data.total_results === 0) {\n          toast.error('Try something else');\n        }\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(setLoading(false));\n  }, [query]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && toast.error('Sorry, something is not OK. Try again')}\n      <Navigation />\n      <SearchBar onSubmit={onSubmitClick} />\n      <Suspense fallback={<Loader />}>\n        <TrendingMovies movies={movies} />\n      </Suspense>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Header","styled","Nav","LinkDesign","NavLink","Navigation","to","SearchButton","FormContainer","schema","yup","shape","search","required","Input","Field","OurForm","Form","SearchBar","onSubmit","initialValues","values","actions","validationSchema","autoComplete","name","type","autoFocus","placeholder","TrendingMovies","lazy","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","query","get","loading","setLoading","useEffect","fetch","then","resp","ok","json","Promise","reject","Error","data","results","length","total_results","toast","catch","finally","Loader","value","Suspense","fallback","position","reverseOrder"],"sourceRoot":""}