{"version":3,"file":"static/js/480.c28e81ae.chunk.js","mappings":"mQAEaA,EAAQC,EAAAA,EAAAA,IAAH,2D,mBCGZC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0QAgBHG,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,UCpBKJ,GAAaD,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,6IAyGhB,EA9FqB,WAAO,IAAD,IACzB,GAWIQ,EAAAA,EAAAA,UAAS,CAAC,GAXd,sBAEIC,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,cACAC,EAJJ,EAIIA,OACAC,EALJ,EAKIA,SACAC,EANJ,EAMIA,MACAC,EAPJ,EAOIA,aACAC,EARJ,EAQIA,aAEFC,EAVF,KAYA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,WACRR,GAAW,GACXS,MAAM,sCAAD,OACmCR,EADnC,6DAGFS,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACJf,EAAQe,EACT,IACAC,QACAC,SAAQ,WACPf,GAAW,EACZ,GACJ,GAAE,CAACC,IAEJ,IAAMe,EAAU,OAAGvB,QAAH,IAAGA,OAAH,EAAGA,EAAQwB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,EAAO,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAAc0B,MAAM,EAAG,GAEvC,OACE,gCACGvB,IAAW,SAACwB,EAAA,EAAD,KACZ,SAACC,EAAA,EAAD,KACA,SAACvC,EAAD,CAAUC,GAAImB,EAAd,6BACA,iBACEoB,MAAO,CACLC,QAAS,OACTC,UAAW,QACXC,WAAY,OACZC,YAAa,OACbC,eAAgB,UANpB,WASE,gBAAKC,IAAG,yCAAoCxC,GAAeyC,IAAI,MAClD,IAAZjC,IACC,UAAClB,EAAD,CACE4C,MAAO,CACLQ,gBAAgB,sGAAD,OAAwGzC,EAAxG,KACf0C,eAAgB,SAHpB,WAME,gBAAIT,MAAO,CAAEU,aAAc,QAA3B,UACGxC,EADH,IACW0B,EADX,QAGA,oCACA,cAAGI,MAAO,CAAEU,aAAc,QAA1B,SAAqCnB,KACrC,oCACA,cAAGS,MAAO,CAAEU,aAAc,QAA1B,SAAqCtC,KACrC,sCACA,uBAAIH,WAIV,iBACE+B,MAAO,CACLC,QAAS,OACTI,eAAgB,UAHpB,WAME,SAAC,EAAD,CACE5C,GAAI,OACJoB,MAAO,CAAEC,KAAMJ,EAASG,MAAQH,EAASG,MAAMC,KAAO,KAFxD,mBAMA,SAAC,EAAD,CACErB,GAAI,UACJoB,MAAO,CAAEC,KAAMJ,EAASG,MAAQH,EAASG,MAAMC,KAAO,KAFxD,yBAOF,SAAC,KAAD,MAGL,C,8FC7GY6B,EAAStD,EAAAA,EAAAA,OAAH,8LAUNuD,EAAMvD,EAAAA,EAAAA,IAAH,0C,SCRVwD,GAAaxD,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,6IAWH0C,EAAa,WACxB,OACE,SAACY,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAYpD,GAAG,IAAf,mBACA,SAACoD,EAAD,CAAYpD,GAAG,UAAf,wBAIP,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.jsx","components/Navigation/Navagation.styled.jsx","components/Navigation/Navigation.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Descr = styled.div`\n  padding: 10px;\n  color: white;\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  margin-bottom: 20px;\n  margin-top: -20px;\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  color: #ffffff;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.object.isRequired,\n};\n","import { Navigation } from 'components/Navigation/Navigation';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Descr } from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from 'components/Loader/Loader';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  padding: 12px;\n  font-size: 18px;\n  color: #ffffff;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [\n    {\n      poster_path,\n      backdrop_path,\n      genres,\n      overview,\n      title,\n      release_date,\n      vote_average,\n    },\n    setFilm,\n  ] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=1db4141403b8f52722dd71f31d913046&language=en-US`\n    )\n      .then(resp => resp.json())\n      .then(data => {\n        setFilm(data);\n      })\n      .catch()\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  const genresList = genres?.map(genre => genre.name).join(', ');\n  const release = release_date?.slice(0, 4);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Navigation />\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      <div\n        style={{\n          display: 'flex',\n          marginTop: '-19px',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          justifyContent: 'center',\n        }}\n      >\n        <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        {loading === false && (\n          <Descr\n            style={{\n              backgroundImage: `linear-gradient(rgba(2,0,36,0.5) 0%, rgba(0,0,0,0.5) 100%), url(https://image.tmdb.org/t/p/original${backdrop_path})`,\n              backgroundSize: 'cover',\n            }}\n          >\n            <h2 style={{ marginBottom: '15px' }}>\n              {title}({release})\n            </h2>\n            <h3>Genres</h3>\n            <p style={{ marginBottom: '15px' }}>{genresList}</p>\n            <h3>Rating</h3>\n            <p style={{ marginBottom: '15px' }}>{vote_average}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </Descr>\n        )}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <StyledLink\n          to={'cast'}\n          state={{ from: location.state ? location.state.from : '/' }}\n        >\n          Cast\n        </StyledLink>\n        <StyledLink\n          to={'reviews'}\n          state={{ from: location.state ? location.state.from : '/' }}\n        >\n          Reviews\n        </StyledLink>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  box-shadow: 0 10px 10px -5px rgba(0, 0, 0, 0.3);\n  background-color: white;\n  margin-bottom: 20px;\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Header, Nav } from './Navagation.styled';\nimport styled from '@emotion/styled';\n\nconst LinkDesign = styled(NavLink)`\n  display: block;\n  padding: 12px;\n  font-size: 18px;\n  color: #000000;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const Navigation = () => {\n  return (\n    <Header>\n      <Nav>\n        <LinkDesign to=\"/\">Home</LinkDesign>\n        <LinkDesign to=\"/movies\">Movies</LinkDesign>\n      </Nav>\n    </Header>\n  );\n};\n"],"names":["Descr","styled","StyledLink","Link","BackLink","to","children","size","NavLink","useState","poster_path","backdrop_path","genres","overview","title","release_date","vote_average","setFilm","loading","setLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","fetch","then","resp","json","data","catch","finally","genresList","map","genre","name","join","release","slice","Loader","Navigation","style","display","marginTop","marginLeft","marginRight","justifyContent","src","alt","backgroundImage","backgroundSize","marginBottom","Header","Nav","LinkDesign"],"sourceRoot":""}